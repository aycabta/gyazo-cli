#!/usr/bin/env node

var exec = require('child_process').exec
  , optimist = require('optimist')
  , screencapture = require('../lib/screencapture')
  , tmp = require('tmp')
  , fs = require('fs')
  , series = require('run-series')
  , gyazo = require('../lib/gyazo')

var argv = optimist
    .usage('Usage: $0')
    .describe('help', 'Print this')
    .describe('version', 'Show version')
    .describe('times', 'Screenshot N times and upload them all')
    .describe('quiet', 'Don\'t open an image in browser (Copy url only)')
    .describe('output', 'Write screenshot to an output file (also upload)')
    .describe('host', 'Specify a host url to which you upload')
    .describe('id', 'Specify a device id')
    .alias('h', 'help')
    .alias('v', 'version')
    .alias('t', 'times')
    .alias('q', 'quiet')
    .alias('o', 'output')
    .argv

if (argv.help) {
  console.log(optimist.help())
  process.exit(0)
}

if (argv.version) {
  console.log(require('../package.json').version)
  process.exit(0)
}

function pbcopy(text, callback) {
  callback = callback || function () {}
  exec(['echo', '"' + text + '"' , '| pbcopy'].join(' '), callback)
}

function openURL(url) {
  if (argv.quiet) return

  exec('open ' + url)
}

function openURLs(urls) {
  if (argv.quiet) return

  exec('open ' + urls.join(' '))
}

function gyazoAndFinalize(inputs) {
  return gyazo(inputs).then(function (urls) {
    pbcopy(urls.join('\\n'))
    openURLs(urls)

    process.exit(0)
  })
}

// XXX:
tmp.file(function (err, tmpPath) {
  var ws = fs.createWriteStream(tmpPath)
  process.stdin.pipe(ws)
  process.stdin.on('end', function () {
    gyazoAndFinalize(tmpPath)
  })
})

// upload from url or path
var inputs = argv._
if (inputs.length) {
  return gyazoAndFinalize(inputs)
}

// screencapture N times and upload
if (argv.times) {
  var times = argv.times
  var tasks = []
  for (var i = 0; i < times; i++) {
    tasks.push(function (callback) {
      screencapture(callback)
    })
  }

  series(tasks, function (err, paths) {
    if (err) throw err

    gyazoAndFinalize(paths)
  })

  return
}

// capture and upload
screencapture(function (err, imagePath) {
  return gyazoAndFinalize(imagePath)
})
